// <auto-generated />
using System;
using ERP_BusinessLogic.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_BusinessLogic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230305080808_DistributionOrderUpdated2")]
    partial class DistributionOrderUpdated2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_Domians.Models.TbAdminstrator", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AdminEntryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AdminFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReporterIdFk")
                        .HasColumnType("int")
                        .HasColumnName("ReporterID_FK");

                    b.HasKey("AdminId")
                        .HasName("PK__TB_Admin__719FE4E800A4E6F2");

                    b.HasIndex("ReporterIdFk");

                    b.ToTable("TB_Adminstrator");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("categoryDescription");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("categoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("TB_Category");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Age")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<decimal?>("Phone")
                        .HasColumnType("decimal(18,0)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.HasKey("CustomerId")
                        .HasName("PK__TB_Custo__A4AE64D85267C97A");

                    b.ToTable("TB_Customer");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpectedArrivalDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expectedArrivalDate");

                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderStatusId")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("OrderingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderingDate");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalPrice");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int")
                        .HasColumnName("totalQty");

                    b.HasKey("Id");

                    b.HasIndex("DistributorId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("TB_DistributionOrder");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrderDetail", b =>
                {
                    b.Property<int>("DistributionOrderId")
                        .HasColumnType("int")
                        .HasColumnName("distributionOrderId");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.HasKey("DistributionOrderId", "ProductId")
                        .HasName("COM_PK_distributionOrderId_productId");

                    b.HasIndex("ProductId");

                    b.ToTable("TB_DistributionOrderDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TbDistributionOrderStatus");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributor", b =>
                {
                    b.Property<int>("DistributorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("distributorId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("DistributorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("distributorName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("DistributorId");

                    b.ToTable("TB_Distributor");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeDetail", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AttendenceTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EmployeeSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Holidays")
                        .HasColumnType("date");

                    b.Property<int?>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int?>("HrmanagerId")
                        .HasColumnType("int")
                        .HasColumnName("HRManagerId");

                    b.Property<string>("PhotoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TaxWithholding")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("HrmanagerId");

                    b.ToTable("TB_EmployeeDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeTaskDetail", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BounsHours")
                        .HasColumnType("int");

                    b.Property<int?>("EmplyeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TaskAssignedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TaskDeadlineTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("EmplyeeId");

                    b.ToTable("TB_EmployeeTaskDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeTrainning", b =>
                {
                    b.Property<int>("TrainnningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("HrmangerId")
                        .HasColumnType("int")
                        .HasColumnName("HRMangerId");

                    b.Property<string>("TrainningDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainningType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainnningId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HrmangerId");

                    b.ToTable("TB_EmployeeTrainning");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFinishedProductsInventory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("area");

                    b.Property<decimal?>("MonthlyCosts")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("monthlyCosts");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("ReorderingPoint")
                        .HasColumnType("int")
                        .HasColumnName("reorderingPoint");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("shippingDate");

                    b.HasKey("ProductId");

                    b.ToTable("TB_FinishedProductsInventory");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsAccCat", b =>
                {
                    b.Property<int>("AccId")
                        .HasColumnType("int")
                        .HasColumnName("AccID");

                    b.Property<int>("CatId")
                        .HasColumnType("int")
                        .HasColumnName("CatID");

                    b.HasKey("AccId", "CatId")
                        .HasName("composite_pk category_account");

                    b.HasIndex("CatId");

                    b.ToTable("TB_FMS_AccCat");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsAccount", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncreaseMode")
                        .HasColumnType("int");

                    b.HasKey("AccId")
                        .HasName("PK__TB_FMS_A__91CBC39804A449CE");

                    b.ToTable("TB_FMS_Account");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsCategory", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CatID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatId")
                        .HasName("PK__TB_FMS_C__6A1C8ADAB474143C");

                    b.ToTable("TB_FMS_Category");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsJournalEntry", b =>
                {
                    b.Property<int>("Jeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JEID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Jeaccount1")
                        .HasColumnType("int")
                        .HasColumnName("JEAccount1");

                    b.Property<int?>("Jeaccount2")
                        .HasColumnType("int")
                        .HasColumnName("JEAccount2");

                    b.Property<decimal?>("Jecredit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("JECredit");

                    b.Property<DateTime?>("Jedate")
                        .HasColumnType("datetime")
                        .HasColumnName("JEDate");

                    b.Property<decimal?>("Jedebit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("JEDebit");

                    b.Property<string>("Jedescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JEDescription");

                    b.Property<string>("Jename")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JEName");

                    b.HasKey("Jeid")
                        .HasName("PK__TB_FMS_J__703C596C510B154B");

                    b.HasIndex("Jeaccount1");

                    b.HasIndex("Jeaccount2");

                    b.ToTable("TB_FMS_JournalEntry");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatement", b =>
                {
                    b.Property<int>("StaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("StaBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StaDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaId")
                        .HasName("PK__TB_FMS_S__BA875A61CF47BBBC");

                    b.ToTable("TB_FMS_Statement");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatementAccount", b =>
                {
                    b.Property<string>("AccName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StaId")
                        .HasColumnType("int")
                        .HasColumnName("StaID");

                    b.Property<decimal?>("AccBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AccName", "StaId")
                        .HasName("composite primary key");

                    b.HasIndex("StaId");

                    b.ToTable("TB_FMS_StatementAccounts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatementTemplate", b =>
                {
                    b.Property<int>("TempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TempID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("TempDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TempName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TempId")
                        .HasName("PK__TB_FMS_S__06C703E10B86E807");

                    b.ToTable("TB_FMS_StatementTemplate");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsTemplateAccount", b =>
                {
                    b.Property<int>("AccId")
                        .HasColumnType("int")
                        .HasColumnName("AccID");

                    b.Property<int>("TempId")
                        .HasColumnType("int")
                        .HasColumnName("TempID");

                    b.HasKey("AccId", "TempId")
                        .HasName("composite_pk template_account");

                    b.HasIndex("TempId");

                    b.ToTable("TB_FMS_TemplateAccounts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbHrmanagerDetail", b =>
                {
                    b.Property<int>("Hrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HRId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HrfullName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HRFullName");

                    b.Property<string>("Hrpassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HRPassword");

                    b.HasKey("Hrid");

                    b.ToTable("TB_HRManagerDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbInterviewDetail", b =>
                {
                    b.Property<int>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InterviewDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("InterviewResult")
                        .HasColumnType("bit");

                    b.Property<int?>("RecuriementId")
                        .HasColumnType("int");

                    b.HasKey("InterviewId");

                    b.HasIndex("RecuriementId");

                    b.ToTable("TB_InterviewDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FinishingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ManufacturingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ManufacturingStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ProductManufacturedId")
                        .HasColumnType("int");

                    b.Property<int>("QtyToManufacture")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturingStatusId");

                    b.HasIndex("ProductManufacturedId");

                    b.ToTable("TbManufacturingOrders");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingOrderDetail", b =>
                {
                    b.Property<int>("ManfactoringOrderId")
                        .HasColumnType("int")
                        .HasColumnName("manfactoringOrderId");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("rawMaterialId");

                    b.Property<int>("RawMaterialQtyUsed")
                        .HasColumnType("int")
                        .HasColumnName("rawMaterialQtyUsed");

                    b.HasKey("ManfactoringOrderId", "RawMaterialId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("TB_ManufacturingOrderDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingStatus", b =>
                {
                    b.Property<int>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusId");

                    b.ToTable("TbManufacturingStatus");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrderDetails_Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TbOrder_SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TbOrder_SupplierId");

                    b.ToTable("TbOrderDetails_Suppliers");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrderStatus_Supplier", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusId");

                    b.ToTable("TbOrderStatus_Suppliers");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrder_Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpectedArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("SupplierId");

                    b.ToTable("TbOrder_Suppliers");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("productDescription");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("productName");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("purchasePrice");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("salesPrice");

                    b.HasKey("ProductId")
                        .HasName("PK_Tb_Product");

                    b.HasIndex("CategoryId");

                    b.ToTable("TB_Product");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId")
                        .HasName("PK__TB_Quest__0DC06FAC6B4573AC");

                    b.ToTable("TB_Question");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRawMaterial", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("materialId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("materialDescription");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("materialName");

                    b.HasKey("MaterialId")
                        .HasName("PK_TB_Supplier");

                    b.ToTable("TB_RawMaterial");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRawMaterialsInventory", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("materialId");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("area");

                    b.Property<decimal>("MonthlyCosts")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("monthlyCosts");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("ReorderingPoint")
                        .HasColumnType("int")
                        .HasColumnName("reorderingPoint");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("shippingDate");

                    b.HasKey("MaterialId")
                        .HasName("PK__TB_RawMa__99B653FDB26AF845");

                    b.ToTable("TB_RawMaterialsInventory");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRecuirement", b =>
                {
                    b.Property<int>("RecuirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("HrmanagerId")
                        .HasColumnType("int")
                        .HasColumnName("HRManagerId");

                    b.Property<int?>("RecuirementCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecuirementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RecuirementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecuirementPosition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecuirementId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HrmanagerId");

                    b.ToTable("TB_Recuirement");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbReporter", b =>
                {
                    b.Property<int>("ReporterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReporterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ReporterEntryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReporterFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReporterLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReporterId")
                        .HasName("PK__TB_Repor__4406548BB7FD1991");

                    b.ToTable("TB_Reporter");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSupplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplierId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<int>("AdverageDeliveryTimeInDays")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("SupplierDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplierDescription");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplierName");

                    b.HasKey("SupplierId")
                        .HasName("PK_TB_Supplier_1");

                    b.ToTable("TB_Supplier");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSupplyingMaterialDetail", b =>
                {
                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("materialId");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("pricePerUnit");

                    b.HasKey("SupplierId", "MaterialId")
                        .HasName("COM_PK_supplierId_materialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("TB_SupplyingMaterialDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyId")
                        .HasName("PK__TB_Surve__A5481F7D0DEB2CDB");

                    b.HasIndex("CustomerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("TB_Survey");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TaskDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TaskDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId")
                        .HasName("PK__TB_Task__7C6949B1BE263896");

                    b.HasIndex("CustomerId");

                    b.ToTable("TB_Task");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbToDoList", b =>
                {
                    b.Property<int>("ToDoListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ToDoListDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDoListName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToDoListId")
                        .HasName("PK__TB_ToDoL__1BEFD56CDF0D5E6E");

                    b.HasIndex("CustomerId");

                    b.ToTable("TB_ToDoList");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbVisualReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RAdminId")
                        .HasColumnType("int")
                        .HasColumnName("R_AdminID");

                    b.Property<int>("RReporterId")
                        .HasColumnType("int")
                        .HasColumnName("R_ReporterID");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime");

                    b.HasKey("ReportId")
                        .HasName("PK__TB_Visua__D5BD48E54B3BA761");

                    b.HasIndex("RAdminId");

                    b.HasIndex("RReporterId");

                    b.ToTable("TB_VisualReport");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbAdminstrator", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbReporter", "ReporterIdFkNavigation")
                        .WithMany("TbAdminstrators")
                        .HasForeignKey("ReporterIdFk")
                        .HasConstraintName("FK_TB_Adminstrator_TB_Reporter")
                        .IsRequired();

                    b.Navigation("ReporterIdFkNavigation");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrder", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbDistributor", "Distributor")
                        .WithMany()
                        .HasForeignKey("DistributorId")
                        .HasConstraintName("FK_distributionOrder_PK_Distributor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbDistributionOrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distributor");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrderDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbDistributionOrder", "DistributionOrder")
                        .WithMany("DistributionOrderDetails")
                        .HasForeignKey("DistributionOrderId")
                        .HasConstraintName("FK_DistributionOrderDetails_PK_DistributionOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbProduct", "Product")
                        .WithMany("TbDistributionOrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_DistributionOrderDetails_PK_Products")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributionOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbHrmanagerDetail", "Hrmanager")
                        .WithMany("TbEmployeeDetails")
                        .HasForeignKey("HrmanagerId")
                        .HasConstraintName("FK_TB_EmployeeDetails_TB_HRManagerDetails");

                    b.Navigation("Hrmanager");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeTaskDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbEmployeeDetail", "Emplyee")
                        .WithMany("TbEmployeeTaskDetails")
                        .HasForeignKey("EmplyeeId")
                        .HasConstraintName("FK_TB_EmployeeTaskDetails_TB_EmployeeDetails");

                    b.Navigation("Emplyee");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeTrainning", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbEmployeeDetail", "Employee")
                        .WithMany("TbEmployeeTrainnings")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_TB_EmployeeTrainning_TB_EmployeeDetails");

                    b.HasOne("ERP_Domians.Models.TbHrmanagerDetail", "Hrmanger")
                        .WithMany("TbEmployeeTrainnings")
                        .HasForeignKey("HrmangerId")
                        .HasConstraintName("FK_TB_EmployeeTrainning_TB_HRManagerDetails");

                    b.Navigation("Employee");

                    b.Navigation("Hrmanger");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFinishedProductsInventory", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbProduct", "Product")
                        .WithOne("TbFinishedProductsInventory")
                        .HasForeignKey("ERP_Domians.Models.TbFinishedProductsInventory", "ProductId")
                        .HasConstraintName("FK__TB_Finish__produ__3C69FB99")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsAccCat", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbFmsAccount", "Acc")
                        .WithMany("TbFmsAccCats")
                        .HasForeignKey("AccId")
                        .HasConstraintName("FK__TB_FMS_Ac__AccID__114A936A")
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbFmsCategory", "Cat")
                        .WithMany("TbFmsAccCats")
                        .HasForeignKey("CatId")
                        .HasConstraintName("FK__TB_FMS_Ac__CatID__123EB7A3")
                        .IsRequired();

                    b.Navigation("Acc");

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsJournalEntry", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbFmsAccount", "Jeaccount1Navigation")
                        .WithMany("TbFmsJournalEntryJeaccount1Navigations")
                        .HasForeignKey("Jeaccount1")
                        .HasConstraintName("FK__TB_FMS_Jo__JEAcc__10566F31");

                    b.HasOne("ERP_Domians.Models.TbFmsAccount", "Jeaccount2Navigation")
                        .WithMany("TbFmsJournalEntryJeaccount2Navigations")
                        .HasForeignKey("Jeaccount2")
                        .HasConstraintName("FK__TB_FMS_Jo__JEAcc__114A936A");

                    b.Navigation("Jeaccount1Navigation");

                    b.Navigation("Jeaccount2Navigation");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatementAccount", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbFmsStatement", "Sta")
                        .WithMany("TbFmsStatementAccounts")
                        .HasForeignKey("StaId")
                        .HasConstraintName("FK__TB_FMS_St__StaID__18EBB532")
                        .IsRequired();

                    b.Navigation("Sta");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsTemplateAccount", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbFmsAccount", "Acc")
                        .WithMany("TbFmsTemplateAccounts")
                        .HasForeignKey("AccId")
                        .HasConstraintName("FK__TB_FMS_Te__AccID__160F4887")
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbFmsStatementTemplate", "Temp")
                        .WithMany("TbFmsTemplateAccounts")
                        .HasForeignKey("TempId")
                        .HasConstraintName("FK__TB_FMS_Te__TempI__17036CC0")
                        .IsRequired();

                    b.Navigation("Acc");

                    b.Navigation("Temp");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbInterviewDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbRecuirement", "Recuriement")
                        .WithMany("TbInterviewDetails")
                        .HasForeignKey("RecuriementId")
                        .HasConstraintName("FK_TB_InterviewDetails_TB_Recuirement");

                    b.Navigation("Recuriement");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingOrder", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbManufacturingStatus", "ManufacturingStatus")
                        .WithMany()
                        .HasForeignKey("ManufacturingStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbProduct", "ProductManufactured")
                        .WithMany()
                        .HasForeignKey("ProductManufacturedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturingStatus");

                    b.Navigation("ProductManufactured");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingOrderDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbManufacturingOrder", "ManfactoringOrder")
                        .WithMany("ManufacturingOrderDetails")
                        .HasForeignKey("ManfactoringOrderId")
                        .HasConstraintName("FK_TB_ManufacturingOrderDetails_TB_ManufacturingOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbRawMaterial", "RawMaterial")
                        .WithMany("TbManufacturingOrderDetails")
                        .HasForeignKey("RawMaterialId")
                        .HasConstraintName("FK_TB_ManufacturingOrderDetails_TB_RawMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManfactoringOrder");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrderDetails_Supplier", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbOrder_Supplier", null)
                        .WithMany("OrderedMaterials")
                        .HasForeignKey("TbOrder_SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("ERP_Domians.Models.OwnedProperties.OrderedRawMaterialDetails", "OrderedRawMaterials", b1 =>
                        {
                            b1.Property<int>("TbOrderDetails_SupplierId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("MaterialId")
                                .HasColumnType("int");

                            b1.Property<string>("MaterialName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("SalesPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("TbOrderDetails_SupplierId");

                            b1.ToTable("TbOrderDetails_Suppliers");

                            b1.WithOwner()
                                .HasForeignKey("TbOrderDetails_SupplierId");
                        });

                    b.Navigation("OrderedRawMaterials");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrder_Supplier", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbOrderStatus_Supplier", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbSupplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbProduct", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbCategory", "Category")
                        .WithMany("TbProducts")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Product_PK_Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRawMaterialsInventory", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbRawMaterial", "Material")
                        .WithOne("TbRawMaterialsInventory")
                        .HasForeignKey("ERP_Domians.Models.TbRawMaterialsInventory", "MaterialId")
                        .HasConstraintName("FK_RawMaterialsInventory_PK_RawMaterials")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRecuirement", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbEmployeeDetail", "Employee")
                        .WithMany("TbRecuirements")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_TB_Recuirement_TB_EmployeeDetails");

                    b.HasOne("ERP_Domians.Models.TbHrmanagerDetail", "Hrmanager")
                        .WithMany("TbRecuirements")
                        .HasForeignKey("HrmanagerId")
                        .HasConstraintName("FK_TB_Recuirement_TB_HRManagerDetails");

                    b.Navigation("Employee");

                    b.Navigation("Hrmanager");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSupplyingMaterialDetail", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbRawMaterial", "Material")
                        .WithMany("TbSupplyingMaterialDetails")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_SupplyingMaterialDetails_PK_RawMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbSupplier", "Supplier")
                        .WithMany("TbSupplyingMaterialDetails")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_SupplyingMaterialDetails_PK_Supplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSurvey", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbCustomer", "Customer")
                        .WithMany("TbSurveys")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__TB_Survey__Custo__48CFD27E");

                    b.HasOne("ERP_Domians.Models.TbQuestion", "Question")
                        .WithMany("TbSurveys")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__TB_Survey__Quest__49C3F6B7");

                    b.Navigation("Customer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbTask", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbCustomer", "Customer")
                        .WithMany("TbTasks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_TB_Task_TB_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbToDoList", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbCustomer", "Customer")
                        .WithMany("TbToDoLists")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__TB_ToDoLi__Custo__45F365D3");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbVisualReport", b =>
                {
                    b.HasOne("ERP_Domians.Models.TbAdminstrator", "RAdmin")
                        .WithMany("TbVisualReports")
                        .HasForeignKey("RAdminId")
                        .HasConstraintName("FK_TB_VisualReport_TB_Adminstrator")
                        .IsRequired();

                    b.HasOne("ERP_Domians.Models.TbReporter", "RReporter")
                        .WithMany("TbVisualReports")
                        .HasForeignKey("RReporterId")
                        .HasConstraintName("FK_TB_VisualReport_TB_Reporter")
                        .IsRequired();

                    b.Navigation("RAdmin");

                    b.Navigation("RReporter");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbAdminstrator", b =>
                {
                    b.Navigation("TbVisualReports");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbCategory", b =>
                {
                    b.Navigation("TbProducts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbCustomer", b =>
                {
                    b.Navigation("TbSurveys");

                    b.Navigation("TbTasks");

                    b.Navigation("TbToDoLists");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbDistributionOrder", b =>
                {
                    b.Navigation("DistributionOrderDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbEmployeeDetail", b =>
                {
                    b.Navigation("TbEmployeeTaskDetails");

                    b.Navigation("TbEmployeeTrainnings");

                    b.Navigation("TbRecuirements");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsAccount", b =>
                {
                    b.Navigation("TbFmsAccCats");

                    b.Navigation("TbFmsJournalEntryJeaccount1Navigations");

                    b.Navigation("TbFmsJournalEntryJeaccount2Navigations");

                    b.Navigation("TbFmsTemplateAccounts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsCategory", b =>
                {
                    b.Navigation("TbFmsAccCats");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatement", b =>
                {
                    b.Navigation("TbFmsStatementAccounts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbFmsStatementTemplate", b =>
                {
                    b.Navigation("TbFmsTemplateAccounts");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbHrmanagerDetail", b =>
                {
                    b.Navigation("TbEmployeeDetails");

                    b.Navigation("TbEmployeeTrainnings");

                    b.Navigation("TbRecuirements");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbManufacturingOrder", b =>
                {
                    b.Navigation("ManufacturingOrderDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbOrder_Supplier", b =>
                {
                    b.Navigation("OrderedMaterials");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbProduct", b =>
                {
                    b.Navigation("TbDistributionOrderDetails");

                    b.Navigation("TbFinishedProductsInventory");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbQuestion", b =>
                {
                    b.Navigation("TbSurveys");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRawMaterial", b =>
                {
                    b.Navigation("TbManufacturingOrderDetails");

                    b.Navigation("TbRawMaterialsInventory");

                    b.Navigation("TbSupplyingMaterialDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbRecuirement", b =>
                {
                    b.Navigation("TbInterviewDetails");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbReporter", b =>
                {
                    b.Navigation("TbAdminstrators");

                    b.Navigation("TbVisualReports");
                });

            modelBuilder.Entity("ERP_Domians.Models.TbSupplier", b =>
                {
                    b.Navigation("TbSupplyingMaterialDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
